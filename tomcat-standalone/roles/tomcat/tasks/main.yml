---
  - name: Create Java and Tomcat Directory
    file:
      path: "/opt/{{ item }}"
      owner: root
      group: root
      mode: 0755
      recurse: yes
      state: directory
    with_items: ["java", "middleware"]

  - name: Add group tomcat
    group: name={{ tomcat.tomcat_user }}

  - name: Add user tomcat
    user: name={{ tomcat.tomcat_user }} group={{ tomcat.tomcat_user }} home={{ tomcat.download_folder }} createhome=yes
    become: True
    become_method: sudo

  - name: Download Java
    command: "wget -q -O {{ java.java_archive }} -c --no-check-certificate --no-cookies --header 'Cookie: oraclelicense=accept-securebackup-cookie' {{ java.download_url }} "
    register: result

  - name: Unpack Java archive
    command: "tar -zxvf {{ java.java_archive }} -C {{ java.download_folder }}"
    register: javaresult

  - name: Symlink install directory
    file: src={{ java.download_folder }}/{{ javaresult.stdout_lines[0] }} path={{ java.java_home }} state=link

  - name: Fix Java ownership
    file: state=directory path={{ java.java_home }} owner=root group=root recurse=yes

  - name: Make Java available for system
    command: 'alternatives --install "/usr/bin/java" "java" "{{ java.java_home }}/bin/java" 2000'

  - name: Clean up Java
    file: state=absent path={{ java.java_archive }}

  - name: Download Tomcat
    command: "wget -q -O {{ tomcat.tomcat_archive }} --no-check-certificate --no-cookies --header 'Cookie: oraclelicense=accept-securebackup-cookie' {{ tomcat.download_url }} "

  - name: Unpack Tomcat archive
    command: "tar -zxvf {{ tomcat.tomcat_archive }} -C {{ tomcat.download_folder }}"
    register: tomcatresult 

  - name: Print output
    debug:
      var: tomcatresult.stdout_lines[0]

  - name: Symlink install directory
    file: src={{ tomcat.download_folder }}/{{ tomcatresult.stdout_lines[0].split('/')[0] }} path={{ tomcat.tomcat_home }} state=link

  - name: Fix Tomcat ownership
    file: state=directory path={{ tomcat.tomcat_home }} owner={{ tomcat.tomcat_user }} group={{ tomcat.tomcat_user }} recurse=yes

  - name: Clean up Tomcat
    file: state=absent path={{ tomcat.tomcat_archive }}

  - name: Configure Tomcat server
    template: src=server.xml dest={{ tomcat.tomcat_confdir }}
    notify: restart tomcat

  - name: Configure Tomcat users
    template: src=tomcat-users.xml dest={{ tomcat.tomcat_confdir }} 
    notify: restart tomcat

  - name: Install Tomcat init script
    template: src=tomcat-initscript.j2 dest=/etc/init.d/tomcat mode=0755

  - name: Start Tomcat
    service: name=tomcat state=started enabled=yes
